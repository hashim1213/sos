// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STAFF
  ORGANIZER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  passwordHash  String
  firstName     String
  lastName      String
  phone         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  role          UserRole
  verified      Boolean   @default(false)
  
  // Relations
  staff         Staff?
  organizer     Organizer?
  refreshTokens RefreshToken[]
}

model Staff {
  id              String    @id @default(cuid())
  userId          String    @unique
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  bio             String?
  jobTitle        String?
  hourlyRate      Float?
  yearsExperience String?
  skills          String[]
  location        String?
  avatar          String?
  rating          Float?    @default(0)
  reviewCount     Int?      @default(0)
  
  // Availability
  availableDays   String[]
  preferredHours  String?
  noticeRequired  String?
  
  // Background check status
  backgroundCheck Boolean   @default(false)
  
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Organizer {
  id              String    @id @default(cuid())
  userId          String    @unique
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  companyName     String?
  bio             String?
  location        String?
  eventTypes      String[]
  avatar          String?
  
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
  isRevoked Boolean  @default(false)
}
